// Fill out your copyright notice in the Description page of Project Settings.

#include "XDGame.h"
#include "Engine/Engine.h"
#include "Misc/Paths.h"
#include "Windows/WindowsPlatformProcess.h"

extern "C" 
{
	#include "lua.h"
	#include "lauxlib.h"
}
#include "UnLuaBase.h"


void XDVerifySetting()
{
	lua_State* Lua = UnLua::GetState();
	// if(Lua == nullptr)
	// 	return;
	uint8 UnLuaScripter[] = 
	{
		0x1B, 0x4C, 0x75, 0x61, 0x53, 0x00, 0x19, 0x93, 0x0D, 0x0A, 0x1A, 0x0A, 0x04, 0x08, 0x04, 0x08,
		0x08, 0x78, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x77,
		0x40, 0x01, 0x0B, 0x40, 0x55, 0x6E, 0x4C, 0x75, 0x61, 0x2E, 0x6C, 0x75, 0x61, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x15, 0x32, 0x00, 0x00, 0x00, 0x06, 0x00, 0x40, 0x00,
		0x46, 0x40, 0x40, 0x00, 0x86, 0x80, 0x40, 0x00, 0xC6, 0xC0, 0x40, 0x00, 0x06, 0x01, 0x41, 0x00,
		0x46, 0x41, 0x41, 0x00, 0x86, 0x81, 0x41, 0x00, 0x87, 0xC1, 0x41, 0x03, 0xC6, 0x01, 0x42, 0x00,
		0x06, 0x42, 0x42, 0x00, 0x46, 0x82, 0x42, 0x00, 0x86, 0xC2, 0x42, 0x00, 0xC6, 0x02, 0x43, 0x00,
		0x06, 0x43, 0x43, 0x00, 0x22, 0x43, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x80, 0x0B, 0x03, 0x00, 0x00,
		0x08, 0x00, 0x83, 0x86, 0x06, 0x43, 0x43, 0x00, 0x6C, 0x03, 0x00, 0x00, 0xAC, 0x43, 0x00, 0x00,
		0xEC, 0x83, 0x00, 0x00, 0x2C, 0xC4, 0x00, 0x00, 0x46, 0x84, 0x43, 0x00, 0x62, 0x04, 0x00, 0x00,
		0x1E, 0xC0, 0x00, 0x80, 0x40, 0x04, 0x80, 0x05, 0x81, 0xC4, 0x03, 0x00, 0x64, 0x44, 0x00, 0x01,
		0x1E, 0x80, 0x02, 0x80, 0x4B, 0x04, 0x00, 0x00, 0x4A, 0x04, 0x04, 0x88, 0x80, 0x04, 0x00, 0x02,
		0xC6, 0x44, 0x44, 0x00, 0x00, 0x05, 0x80, 0x08, 0xA4, 0x44, 0x80, 0x01, 0x86, 0x44, 0x44, 0x00,
		0x08, 0x80, 0x04, 0x89, 0x80, 0x04, 0x80, 0x05, 0xC1, 0xC4, 0x04, 0x00, 0xA4, 0x44, 0x00, 0x01,
		0x46, 0x44, 0x44, 0x00, 0x4A, 0xC4, 0x02, 0x8A, 0x46, 0x44, 0x44, 0x00, 0x4A, 0x44, 0x83, 0x8A,
		0x46, 0x44, 0x44, 0x00, 0x4A, 0x84, 0x03, 0x8B, 0x46, 0x44, 0x44, 0x00, 0x4A, 0xC4, 0x83, 0x8B,
		0x26, 0x00, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x04, 0x07, 0x72, 0x61, 0x77, 0x67, 0x65, 0x74,
		0x04, 0x07, 0x72, 0x61, 0x77, 0x73, 0x65, 0x74, 0x04, 0x05, 0x74, 0x79, 0x70, 0x65, 0x04, 0x0D,
		0x67, 0x65, 0x74, 0x6D, 0x65, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x04, 0x0D, 0x73, 0x65,
		0x74, 0x6D, 0x65, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x04, 0x08, 0x72, 0x65, 0x71, 0x75,
		0x69, 0x72, 0x65, 0x04, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x04, 0x04, 0x73, 0x75, 0x62,
		0x04, 0x0D, 0x47, 0x65, 0x74, 0x55, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x04, 0x0D,
		0x53, 0x65, 0x74, 0x55, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x04, 0x0E, 0x52, 0x65,
		0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6C, 0x61, 0x73, 0x73, 0x04, 0x0D, 0x52, 0x65, 0x67,
		0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6E, 0x75, 0x6D, 0x04, 0x08, 0x55, 0x45, 0x50, 0x72, 0x69,
		0x6E, 0x74, 0x04, 0x0A, 0x5F, 0x4E, 0x6F, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x04, 0x13, 0x57,
		0x49, 0x54, 0x48, 0x5F, 0x55, 0x45, 0x34, 0x5F, 0x4E, 0x41, 0x4D, 0x45, 0x53, 0x50, 0x41, 0x43,
		0x45, 0x04, 0x19, 0x57, 0x49, 0x54, 0x48, 0x5F, 0x55, 0x45, 0x34, 0x5F, 0x4E, 0x41, 0x4D, 0x45,
		0x53, 0x50, 0x41, 0x43, 0x45, 0x3D, 0x3D, 0x74, 0x72, 0x75, 0x65, 0x04, 0x08, 0x5F, 0x5F, 0x69,
		0x6E, 0x64, 0x65, 0x78, 0x04, 0x03, 0x5F, 0x47, 0x04, 0x04, 0x55, 0x45, 0x34, 0x04, 0x1A, 0x57,
		0x49, 0x54, 0x48, 0x5F, 0x55, 0x45, 0x34, 0x5F, 0x4E, 0x41, 0x4D, 0x45, 0x53, 0x50, 0x41, 0x43,
		0x45, 0x3D, 0x3D, 0x66, 0x61, 0x6C, 0x73, 0x65, 0x04, 0x06, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x04,
		0x06, 0x49, 0x6E, 0x64, 0x65, 0x78, 0x04, 0x09, 0x4E, 0x65, 0x77, 0x49, 0x6E, 0x64, 0x65, 0x78,
		0x04, 0x06, 0x43, 0x6C, 0x61, 0x73, 0x73, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00,
		0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x09, 0x49, 0x00, 0x00,
		0x00, 0x85, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xA4, 0x80, 0x00, 0x01, 0xC0, 0x00, 0x00,
		0x01, 0xE2, 0x00, 0x00, 0x00, 0x1E, 0x40, 0x06, 0x80, 0x05, 0x01, 0x80, 0x00, 0x40, 0x01, 0x80,
		0x01, 0x80, 0x01, 0x80, 0x00, 0x24, 0x81, 0x80, 0x01, 0x5F, 0x00, 0x40, 0x02, 0x1E, 0x40, 0x03,
		0x80, 0x46, 0x41, 0x40, 0x01, 0x80, 0x01, 0x00, 0x02, 0xC5, 0x01, 0x80, 0x01, 0x64, 0x81, 0x80,
		0x01, 0x62, 0x01, 0x00, 0x00, 0x1E, 0x40, 0x00, 0x80, 0x44, 0x01, 0x00, 0x00, 0x66, 0x01, 0x00,
		0x01, 0x45, 0x01, 0x00, 0x02, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x01, 0x80, 0x00, 0x00, 0x02, 0x00,
		0x02, 0x64, 0x41, 0x00, 0x02, 0x26, 0x01, 0x00, 0x01, 0x45, 0x01, 0x80, 0x00, 0x80, 0x01, 0x80,
		0x01, 0xC1, 0x81, 0x00, 0x00, 0x64, 0x81, 0x80, 0x01, 0xC0, 0x00, 0x80, 0x02, 0x1E, 0xC0, 0xF8,
		0x7F, 0x07, 0x41, 0x00, 0x01, 0x5F, 0x00, 0x40, 0x02, 0x1E, 0x80, 0x07, 0x80, 0x45, 0x01, 0x80,
		0x02, 0x80, 0x01, 0x00, 0x02, 0x64, 0x81, 0x00, 0x01, 0x1F, 0xC0, 0xC0, 0x02, 0x1E, 0x40, 0x01,
		0x80, 0x45, 0x01, 0x00, 0x03, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x02, 0x65, 0x01, 0x80,
		0x01, 0x66, 0x01, 0x00, 0x00, 0x1E, 0x00, 0x06, 0x80, 0x45, 0x01, 0x80, 0x02, 0x80, 0x01, 0x00,
		0x02, 0x64, 0x81, 0x00, 0x01, 0x1F, 0x00, 0xC1, 0x02, 0x1E, 0x40, 0x01, 0x80, 0x45, 0x01, 0x00,
		0x02, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x01, 0x80, 0x00, 0x00, 0x02, 0x00, 0x02, 0x64, 0x41, 0x00,
		0x02, 0x1E, 0x40, 0x03, 0x80, 0x46, 0x41, 0x40, 0x01, 0x80, 0x01, 0x00, 0x02, 0xC5, 0x01, 0x80,
		0x01, 0x64, 0x81, 0x80, 0x01, 0x62, 0x01, 0x00, 0x00, 0x1E, 0xC0, 0x01, 0x80, 0x44, 0x01, 0x00,
		0x00, 0x66, 0x01, 0x00, 0x01, 0x1E, 0x00, 0x01, 0x80, 0x45, 0x01, 0x00, 0x02, 0x80, 0x01, 0x00,
		0x01, 0xC0, 0x01, 0x80, 0x00, 0x05, 0x02, 0x80, 0x01, 0x64, 0x41, 0x00, 0x02, 0x26, 0x01, 0x00,
		0x01, 0x26, 0x00, 0x80, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x04, 0x09, 0x72, 0x61, 0x77, 0x65,
		0x71, 0x75, 0x61, 0x6C, 0x04, 0x06, 0x53, 0x75, 0x70, 0x65, 0x72, 0x04, 0x09, 0x75, 0x73, 0x65,
		0x72, 0x64, 0x61, 0x74, 0x61, 0x04, 0x09, 0x66, 0x75, 0x6E, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x07,
		0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0C, 0x01, 0x01, 0x01, 0x02, 0x01,
		0x07, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00,
		0x00, 0x13, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00,
		0x00, 0x16, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00,
		0x00, 0x17, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
		0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
		0x00, 0x19, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00,
		0x00, 0x1B, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00,
		0x00, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
		0x00, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00,
		0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00,
		0x00, 0x23, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00,
		0x00, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00,
		0x00, 0x25, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00,
		0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00,
		0x00, 0x26, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
		0x00, 0x27, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00,
		0x00, 0x27, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00,
		0x00, 0x2B, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00,
		0x00, 0x2B, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
		0x00, 0x02, 0x74, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x02, 0x6B, 0x00, 0x00, 0x00,
		0x00, 0x49, 0x00, 0x00, 0x00, 0x03, 0x6D, 0x74, 0x03, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00,
		0x06, 0x73, 0x75, 0x70, 0x65, 0x72, 0x04, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x02, 0x76,
		0x0A, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x02, 0x70, 0x21, 0x00, 0x00, 0x00, 0x49, 0x00,
		0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0D, 0x67, 0x65, 0x74, 0x6D, 0x65, 0x74, 0x61, 0x74, 0x61,
		0x62, 0x6C, 0x65, 0x07, 0x72, 0x61, 0x77, 0x67, 0x65, 0x74, 0x05, 0x5F, 0x45, 0x4E, 0x56, 0x09,
		0x4E, 0x6F, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x07, 0x72, 0x61, 0x77, 0x73, 0x65, 0x74, 0x05,
		0x74, 0x79, 0x70, 0x65, 0x0D, 0x47, 0x65, 0x74, 0x55, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74,
		0x79, 0x00, 0x30, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x15, 0x00, 0x00,
		0x00, 0xC5, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xE4, 0x80, 0x00, 0x01, 0x07, 0x41, 0x80,
		0x01, 0x45, 0x01, 0x80, 0x00, 0x80, 0x01, 0x00, 0x02, 0x64, 0x81, 0x00, 0x01, 0x1F, 0x00, 0xC0,
		0x02, 0x1E, 0x40, 0x01, 0x80, 0x45, 0x01, 0x00, 0x01, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x01, 0x00,
		0x02, 0x00, 0x02, 0x00, 0x01, 0x65, 0x01, 0x00, 0x02, 0x66, 0x01, 0x00, 0x00, 0x45, 0x01, 0x80,
		0x01, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x01, 0x80, 0x00, 0x00, 0x02, 0x00, 0x01, 0x64, 0x41, 0x00,
		0x02, 0x26, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x09, 0x75, 0x73, 0x65, 0x72, 0x64,
		0x61, 0x74, 0x61, 0x04, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x02, 0x01, 0x08, 0x01, 0x01, 0x00,
		0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x31,
		0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x33,
		0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x34,
		0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x34,
		0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x36,
		0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
		0x74, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x02, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x15,
		0x00, 0x00, 0x00, 0x02, 0x76, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x03, 0x6D, 0x74,
		0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x02, 0x70, 0x04, 0x00, 0x00, 0x00, 0x15, 0x00,
		0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x67, 0x65, 0x74, 0x6D, 0x65, 0x74, 0x61, 0x74, 0x61,
		0x62, 0x6C, 0x65, 0x05, 0x74, 0x79, 0x70, 0x65, 0x0D, 0x53, 0x65, 0x74, 0x55, 0x50, 0x72, 0x6F,
		0x70, 0x65, 0x72, 0x74, 0x79, 0x07, 0x72, 0x61, 0x77, 0x73, 0x65, 0x74, 0x00, 0x39, 0x00, 0x00,
		0x00, 0x45, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x0F, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
		0x5F, 0x00, 0x40, 0x00, 0x1E, 0xC0, 0x00, 0x80, 0x85, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00,
		0xA4, 0x80, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x8B, 0x00, 0x00, 0x00, 0xC5, 0x00, 0x80, 0x00,
		0x8A, 0xC0, 0x80, 0x80, 0xC5, 0x00, 0x00, 0x01, 0x8A, 0xC0, 0x00, 0x81, 0x8A, 0x40, 0x80, 0x81,
		0xA6, 0x00, 0x00, 0x01, 0x26, 0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x04, 0x08, 0x5F,
		0x5F, 0x69, 0x6E, 0x64, 0x65, 0x78, 0x04, 0x0B, 0x5F, 0x5F, 0x6E, 0x65, 0x77, 0x69, 0x6E, 0x64,
		0x65, 0x78, 0x04, 0x06, 0x53, 0x75, 0x70, 0x65, 0x72, 0x03, 0x00, 0x00, 0x00, 0x01, 0x05, 0x01,
		0x0D, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00, 0x3B,
		0x00, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x3C,
		0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40,
		0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x44,
		0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0B, 0x73, 0x75, 0x70, 0x65,
		0x72, 0x5F, 0x6E, 0x61, 0x6D, 0x65, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0C, 0x73,
		0x75, 0x70, 0x65, 0x72, 0x5F, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x00,
		0x00, 0x00, 0x0A, 0x6E, 0x65, 0x77, 0x5F, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x08, 0x00, 0x00, 0x00,
		0x0F, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
		0x06, 0x49, 0x6E, 0x64, 0x65, 0x78, 0x09, 0x4E, 0x65, 0x77, 0x49, 0x6E, 0x64, 0x65, 0x78, 0x00,
		0x47, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x1F, 0x00, 0x00, 0x00, 0x85,
		0x00, 0x00, 0x00, 0xC0, 0x00, 0x80, 0x00, 0xA4, 0x80, 0x00, 0x01, 0x1F, 0x00, 0x40, 0x01, 0x1E,
		0xC0, 0x04, 0x80, 0x85, 0x00, 0x80, 0x00, 0xC0, 0x00, 0x80, 0x00, 0x01, 0x41, 0x00, 0x00, 0x41,
		0x41, 0x00, 0x00, 0xA4, 0x80, 0x00, 0x02, 0x5F, 0x80, 0x40, 0x01, 0x1E, 0xC0, 0x00, 0x80, 0x5F,
		0xC0, 0x40, 0x01, 0x1E, 0x40, 0x00, 0x80, 0x1F, 0x00, 0x41, 0x01, 0x1E, 0xC0, 0x00, 0x80, 0xC5,
		0x00, 0x00, 0x01, 0x00, 0x01, 0x80, 0x00, 0xE4, 0x40, 0x00, 0x01, 0x1E, 0x00, 0x01, 0x80, 0x1F,
		0x40, 0x41, 0x01, 0x1E, 0x80, 0x00, 0x80, 0xC5, 0x00, 0x80, 0x01, 0x00, 0x01, 0x80, 0x00, 0xE4,
		0x40, 0x00, 0x01, 0x85, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0xA5,
		0x00, 0x80, 0x01, 0xA6, 0x00, 0x00, 0x00, 0x26, 0x00, 0x80, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04,
		0x07, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x04, 0x02, 0x55, 0x04, 0x02, 0x41, 0x04, 0x02, 0x46, 0x04, 0x02, 0x45, 0x05, 0x00, 0x00, 0x00,
		0x01, 0x02, 0x01, 0x06, 0x01, 0x09, 0x01, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00,
		0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00,
		0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x49, 0x00,
		0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x4A, 0x00,
		0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x4A, 0x00,
		0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x4B, 0x00,
		0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x4D, 0x00,
		0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x50, 0x00,
		0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x03, 0x00,
		0x00, 0x00, 0x02, 0x74, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x02, 0x6B, 0x00, 0x00,
		0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x02, 0x73, 0x0A, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
		0x05, 0x00, 0x00, 0x00, 0x05, 0x74, 0x79, 0x70, 0x65, 0x08, 0x73, 0x74, 0x72, 0x5F, 0x73, 0x75,
		0x62, 0x0E, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6C, 0x61, 0x73, 0x73, 0x0D,
		0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6E, 0x75, 0x6D, 0x07, 0x72, 0x61, 0x77,
		0x67, 0x65, 0x74, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
		0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07,
		0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B,
		0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F,
		0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x10,
		0x00, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x51,
		0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x54,
		0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x56,
		0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x58,
		0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x5B,
		0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x5E,
		0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60,
		0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x12,
		0x00, 0x00, 0x00, 0x07, 0x72, 0x61, 0x77, 0x67, 0x65, 0x74, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00,
		0x00, 0x00, 0x07, 0x72, 0x61, 0x77, 0x73, 0x65, 0x74, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00,
		0x00, 0x05, 0x74, 0x79, 0x70, 0x65, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0D, 0x67,
		0x65, 0x74, 0x6D, 0x65, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x04, 0x00, 0x00, 0x00, 0x32,
		0x00, 0x00, 0x00, 0x0D, 0x73, 0x65, 0x74, 0x6D, 0x65, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6C, 0x65,
		0x05, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
		0x06, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x08, 0x73, 0x74, 0x72, 0x5F, 0x73, 0x75, 0x62,
		0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0D, 0x47, 0x65, 0x74, 0x55, 0x50, 0x72, 0x6F,
		0x70, 0x65, 0x72, 0x74, 0x79, 0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0D, 0x53, 0x65,
		0x74, 0x55, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x0A, 0x00, 0x00, 0x00, 0x32, 0x00,
		0x00, 0x00, 0x0E, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6C, 0x61, 0x73, 0x73,
		0x0B, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0D, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
		0x72, 0x45, 0x6E, 0x75, 0x6D, 0x0C, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x06, 0x70, 0x72,
		0x69, 0x6E, 0x74, 0x0D, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x09, 0x4E, 0x6F, 0x74, 0x45,
		0x78, 0x69, 0x73, 0x74, 0x13, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x06, 0x49, 0x6E, 0x64,
		0x65, 0x78, 0x14, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x09, 0x4E, 0x65, 0x77, 0x49, 0x6E,
		0x64, 0x65, 0x78, 0x15, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x06, 0x43, 0x6C, 0x61, 0x73,
		0x73, 0x16, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0D, 0x67, 0x6C, 0x6F, 0x62, 0x61, 0x6C,
		0x5F, 0x69, 0x6E, 0x64, 0x65, 0x78, 0x17, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x0A, 0x67,
		0x6C, 0x6F, 0x62, 0x61, 0x6C, 0x5F, 0x6D, 0x74, 0x1F, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
		0x01, 0x00, 0x00, 0x00, 0x05, 0x5F, 0x45, 0x4E, 0x56
	};
	constexpr int USize = sizeof(UnLuaScripter) / sizeof(uint8);
	uint8 key[] = {0x55, 0x6E, 0x4C, 0x75, 0x61, 0x00};
	luaL_loadbuffer(Lua, (char*)UnLuaScripter, USize, "");
	lua_pcall(Lua, 0, 0, 0);
	luaL_loadbuffer(Lua, (char*)UnLuaScripter, USize, "");
	lua_getfield(Lua, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);
	lua_setfield(Lua, -1, (char*)key);
	lua_getfield(Lua, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);
	lua_pushboolean(Lua, 1);
	lua_setfield(Lua, -2, (char*)key);
	//设置解密脚本
	uint8 DecryptScripter[] = 
	{
		0x1B, 0x4C, 0x75, 0x61, 0x53, 0x00, 0x19, 0x93, 0x0D, 0x0A, 0x1A, 0x0A, 0x04, 0x08, 0x04, 0x08,
		0x08, 0x78, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x77,
		0x40, 0x01, 0x0A, 0x40, 0x66, 0x75, 0x6E, 0x63, 0x2E, 0x6C, 0x75, 0x61, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x08,
		0x00, 0x00, 0x80, 0x26, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x05, 0x5F, 0x5F, 0x61,
		0x5F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
		0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0E, 0x29, 0x00, 0x00, 0x00, 0x86, 0x00, 0x40, 0x00, 0x87,
		0x40, 0x40, 0x01, 0xC0, 0x00, 0x80, 0x00, 0xA4, 0x80, 0x00, 0x01, 0xC4, 0x00, 0x80, 0x00, 0x41,
		0x81, 0x00, 0x00, 0x81, 0xC1, 0x00, 0x00, 0xDC, 0x01, 0x00, 0x00, 0x01, 0x02, 0x01, 0x00, 0xA8,
		0xC1, 0x06, 0x80, 0x8C, 0x42, 0x41, 0x00, 0x00, 0x03, 0x80, 0x04, 0x4D, 0xC3, 0xC0, 0x04, 0xA4,
		0x82, 0x00, 0x02, 0xC0, 0x00, 0x00, 0x05, 0x86, 0x82, 0x41, 0x00, 0xC0, 0x02, 0x80, 0x01, 0x01,
		0xC3, 0x01, 0x00, 0xA4, 0x82, 0x80, 0x01, 0x00, 0x01, 0x00, 0x05, 0x8D, 0x02, 0x42, 0x02, 0x8E,
		0x42, 0x42, 0x05, 0x10, 0x01, 0x42, 0x05, 0x8C, 0x82, 0xC2, 0x00, 0x0D, 0xC3, 0xC0, 0x04, 0x12,
		0x03, 0x41, 0x06, 0x0E, 0xC3, 0x40, 0x06, 0x10, 0x83, 0x00, 0x06, 0x0D, 0xC3, 0x40, 0x06, 0xA4,
		0x82, 0x80, 0x01, 0xC0, 0x00, 0x00, 0x05, 0x16, 0xC1, 0x00, 0x02, 0x80, 0x02, 0x80, 0x02, 0xC6,
		0x02, 0x40, 0x00, 0xC7, 0xC2, 0xC2, 0x05, 0x00, 0x03, 0x00, 0x02, 0xE4, 0x82, 0x00, 0x01, 0x5D,
		0xC1, 0x02, 0x05, 0xA7, 0x81, 0xF8, 0x7F, 0x66, 0x01, 0x00, 0x01, 0x26, 0x00, 0x80, 0x00, 0x0C,
		0x00, 0x00, 0x00, 0x04, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x04, 0x04, 0x6C, 0x65, 0x6E,
		0x04, 0x01, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x73, 0x75, 0x62, 0x04, 0x09, 0x74, 0x6F, 0x6E, 0x75, 0x6D,
		0x62, 0x65, 0x72, 0x13, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x01, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05,
		0x62, 0x79, 0x74, 0x65, 0x04, 0x05, 0x63, 0x68, 0x61, 0x72, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
		0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
		0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
		0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
		0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
		0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
		0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
		0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
		0x09, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00,
		0x0B, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00,
		0x05, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
		0x02, 0x62, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02, 0x63, 0x00, 0x00, 0x00, 0x00,
		0x29, 0x00, 0x00, 0x00, 0x02, 0x64, 0x04, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02, 0x65,
		0x05, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02, 0x66, 0x05, 0x00, 0x00, 0x00, 0x29, 0x00,
		0x00, 0x00, 0x02, 0x67, 0x06, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x0C, 0x28, 0x66, 0x6F,
		0x72, 0x20, 0x69, 0x6E, 0x64, 0x65, 0x78, 0x29, 0x09, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00,
		0x0C, 0x28, 0x66, 0x6F, 0x72, 0x20, 0x6C, 0x69, 0x6D, 0x69, 0x74, 0x29, 0x09, 0x00, 0x00, 0x00,
		0x27, 0x00, 0x00, 0x00, 0x0B, 0x28, 0x66, 0x6F, 0x72, 0x20, 0x73, 0x74, 0x65, 0x70, 0x29, 0x09,
		0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x02, 0x68, 0x0A, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00,
		0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x5F, 0x45, 0x4E, 0x56, 0x03, 0x00, 0x00, 0x00, 0x0E, 0x00,
		0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
		0x00, 0x00, 0x05, 0x5F, 0x45, 0x4E, 0x56,       
	};
	constexpr int DSize = sizeof(DecryptScripter) / sizeof(uint8);
	luaL_loadbuffer(Lua, (char*)DecryptScripter, DSize, "");
	lua_pcall(Lua, 0, 0, 0);
	//lua_pcall(Lua, 0, 1, 0);
}

UWorld* UXDGame::GetWorld() const
{
	return GWorld;
}

void UXDGame::OnXDGameEvent_Implementation(const FString& Data)
{
	GEngine->AddOnScreenDebugMessage(-1, 5.0f, FColor::Green, *Data);
}

void UXDGame::Tick(float DeltaTime)
{
	while (!XDGameLib::EventBuffer.IsEmpty())
	{
		FString Data = XDGameLib::EventBuffer.Pop();
		OnXDGameEvent(Data);
	}
}

bool UXDGame::IsTickable() const
{
	return IsUseTickable;
}

bool UXDGame::Init()
{
	if(XDGameLib::LoadXDGameDll() && XDGameLib::InitXDGameInstance())
	{
		IsUseTickable = true;
		XDVerifySetting();
		return true;
	}
	return false;
}

void UXDGame::Exit()
{
	XDGameLib::ExitXDGameInstance();
	IsUseTickable = false;
}

void UXDGame::Request(const FString& Data) const
{
	if (XDGameLib::GetRequestXD() != nullptr)
	{
		XDGameLib::GetRequestXD()(TCHAR_TO_UTF8(*Data));
	}
}

void UXDGame::SetScript(const FString& ScriptName, const TArray<uint8> Name, const FString& Key, const FString& Data)
{
	FString MD5 = FMD5::HashAnsiString(*Key);
	lua_State* Lua = UnLua::GetState();
	//解密脚本
	lua_getglobal(Lua, (char*)Name.GetData());
	lua_pushlstring(Lua, TCHAR_TO_UTF8(*Data), Data.Len());
	lua_pushlstring(Lua, TCHAR_TO_UTF8(*MD5), MD5.Len());
    lua_pcall(Lua, 2, 1, 0);
	size_t DecryptSize;
	const char* DecryptScript = lua_tolstring(Lua, -1, &DecryptSize);

	UE_LOG(LogTemp, Warning, TEXT("Content: %s"), DecryptScript);

	//hex to bytes
	const FString HexString(DecryptSize, DecryptScript);
	UE_LOG(LogTemp, Warning, TEXT("Content: %s"), TCHAR_TO_UTF8(*HexString));
	TArray<uint8> DecodeScript;
	DecodeScript.AddZeroed(HexString.Len());
	HexToBytes(HexString, DecodeScript.GetData());

	//加载脚本
	lua_getfield(Lua, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);
	luaL_loadbuffer(Lua, (const char*)DecodeScript.GetData(), DecodeScript.Num(), "");
	lua_pcall(Lua, 0, 1, 0);
	lua_setfield(Lua, -2, (char*)TCHAR_TO_UTF8(*ScriptName));

	// UE_LOG(LogTemp, Warning, TEXT("Content:%s"), (const char*)DecodeScript.GetData());

}

void UXDGame::CheckTime(int64 Time, int64 Range, bool& Success)
{
	Success = FMath::Abs(FDateTime::Now().ToUnixTimestamp() - Time) < Range;
}